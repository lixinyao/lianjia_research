),
menuItem("链家数据",tabName = "lianjia_data",icon = icon("home"),
menuSubItem("SE房源",tabName = "se_house",icon = icon("angle-double-right")),
menuSubItem("SE客源",tabName = "se_customer",icon = icon("angle-double-right")),
menuSubItem("SE成交",tabName = "se_constract",icon = icon("angle-double-right")),
menuSubItem("SE调价",tabName = "se_changeprice",icon = icon("angle-double-right")),
menuSubItem("链家新房",tabName = "new_house",icon = icon("angle-double-right"))
),
menuItem("网签数据",tabName = "netconstract_data",icon = icon("globe"),
menuSubItem("北京网签",tabName = "bj_netconstract",icon = icon("angle-double-right")),
menuSubItem("大连网签",tabName = "dl_netconstract",icon = icon("angle-double-right"))
),
menuItem("关于我们",tabName = "widgets",icon = icon("question"))
)
)
# 主体
body = dashboardBody(
tabItems(
tabItem(
tabName = "se_house",
fluidRow(
column(width = 12,
tabBox(width = 3,
tabPanel(h5("筛选条件"),
selectInput("select1",label = h5("选择城市"),
choices = unique(mydata1$城市), selected = "北京"),
dateRangeInput("dates1",label = h5("选择日期"),language = "zh-CN"),
selectInput("select2",label = h5("委托类型"),
choices = unique(mydata1$委托类型), selected = "出售"),
checkboxGroupInput("indicators1",label = h5("选择指标"),
choices = names(mydata1),
selected = c("城市","录入日期","委托类型","委托量")),
submitButton("确定")),
tabPanel(h5("下载"),
radioButtons("format","文档格式",c("Excel","PDF","HTML","Word"),
inline = TRUE),
downloadButton("downloadReport")
)
),
tabBox(width = 9,
tabPanel(h5("报表"),
DT::dataTableOutput('table1')),
tabPanel(h5("图形"),
plotOutput('plot1',width = "70%",height = "350px"),
plotOutput('plot2',width = "70%",height = "350px")
),
tabPanel(h5("数据挖掘"))
))
)
)
))
# UI
ui = dashboardPage(header,sidebar,body)
shinyApp(ui,server)
library(shiny)
library(shinydashboard)
library(DT)
setwd("/Users/lixinyao/myprogram/shiny/lianjia_research")
# 标题
header = dashboardHeader(
title = "链家研究院数据平台"
#  dropdownMenu(type = "messages",
#               messageItem(
#                 from = "Sales Dept",
#                 message = "Sales are steady this month"
#               ),
#               messageItem(
#                 from = "New User",
#                 message = "How do I register?",
#                 icon = icon("question"),
#                 time = "13:45"
#               ),
#               messageItem(
#                 from = "Support",
#                 message = "The new server is ready.",
#                 icon = icon("life-ring"),
#                 time = "2014-12-01"
#               )
#  )
)
# 侧边栏
sidebar = dashboardSidebar(
sidebarMenu(id = "tabs",
sidebarSearchForm(textId = "searchText",buttonId = "searchButton",
label = "Search..."),
menuItem("宏观数据",tabName = "dashboard",icon = icon("dashboard"),
menuSubItem("整体宏观经济",tabName = "macro_1",icon = icon("angle-double-right")),
menuSubItem("北京",tabName = "macro_2",icon = icon("angle-double-right"))
),
menuItem("链家数据",tabName = "lianjia_data",icon = icon("home"),
menuSubItem("SE房源",tabName = "se_house",icon = icon("angle-double-right")),
menuSubItem("SE客源",tabName = "se_customer",icon = icon("angle-double-right")),
menuSubItem("SE成交",tabName = "se_constract",icon = icon("angle-double-right")),
menuSubItem("SE调价",tabName = "se_changeprice",icon = icon("angle-double-right")),
menuSubItem("链家新房",tabName = "new_house",icon = icon("angle-double-right"))
),
menuItem("网签数据",tabName = "netconstract_data",icon = icon("globe"),
menuSubItem("北京网签",tabName = "bj_netconstract",icon = icon("angle-double-right")),
menuSubItem("大连网签",tabName = "dl_netconstract",icon = icon("angle-double-right"))
),
menuItem("关于我们",tabName = "widgets",icon = icon("question"))
)
)
# 主体
body = dashboardBody(
tabItems(
tabItem(
tabName = "se_house",
fluidRow(
column(width = 12,
tabBox(width = 3,
tabPanel(h5("筛选条件"),
selectInput("select1",label = h5("选择城市"),
choices = unique(mydata1$城市), selected = "北京"),
dateRangeInput("dates1",label = h5("选择日期"),language = "zh-CN"),
selectInput("select2",label = h5("委托类型"),
choices = unique(mydata1$委托类型), selected = "出售"),
checkboxGroupInput("indicators1",label = h5("选择指标"),
choices = names(mydata1),
selected = c("城市","录入日期","委托类型","委托量")),
submitButton("确定")),
tabPanel(h5("下载"),
radioButtons("format","文档格式",c("Excel","PDF","HTML","Word"),
inline = TRUE),
downloadButton("downloadReport")
)
),
tabBox(width = 9,
tabPanel(h5("报表"),
DT::dataTableOutput('table1')),
tabPanel(h5("图形"),
plotOutput('plot1',width = "70%",height = "350px"),
plotOutput('plot2',width = "70%",height = "350px")
),
tabPanel(h5("数据挖掘"))
))
)
)
))
# UI
ui = dashboardPage(header,sidebar,body)
shinyApp(ui,server)
# Server
library(shiny)
library(shinydashboard)
library(RMySQL)
library(ggplot2)
library(gtable)
library(grid)
# 读入数据
con1 = dbConnect(RMySQL::MySQL(),
dbname = 'se_secondhand_house',
username = 'lixinyao',
password = 'lixin131820',
host = '127.0.0.1')# 设置连接
res1 = dbSendQuery(con1,"select 城市,录入时间2 as 录入日期,委托类型,
count(房源编号) as 委托量,
avg(case when 建筑面积 > 4 and 建筑面积 < 50000
and 房屋用途 in ('别墅','公寓','经济适用房','普通住宅')
and 建成年代 > 1900
and 室数 < 9
and 总价/建筑面积 > 1 and 总价/建筑面积 < 15
then 总价/建筑面积 else 0 end)*10000 as 平均委托单价,
avg(case when 建筑面积 > 4 and 建筑面积 < 50000
and 建成年代 > 1900
and 室数 < 9
then 建筑面积 else 0 end) as 平均建筑面积
from SE房源
group by 城市,录入日期,委托类型
order by 城市,录入日期;")# 查询
mydata1 = dbFetch(res1,n=-1)
server = function(input,output){
output$table1 = DT::renderDataTable(DT::datatable({
data1 = mydata1
data1 = subset(data1,data1$城市==input$select1)
data1$录入日期 = as.Date(data1$录入日期,"%Y-%m-%d")
data1 = subset(data1,data1$录入日期 >= input$dates1[1] &
data1$录入日期 < input$dates1[2])
data1 = subset(data1,data1$委托类型==input$select2)
data1 = subset(data1,select=input$indicators1)
}))
output$plot1 = renderPlot({
data1 = mydata1
data1 = subset(data1,data1$城市==input$select1)
data1$录入日期 = as.Date(data1$录入日期,"%Y-%m-%d")
data1 = subset(data1,data1$录入日期 >= input$dates1[1] &
data1$录入日期 <= input$dates1[2])
data1 = subset(data1,data1$委托类型==input$select2)
data1 = subset(data1,select=input$indicators1)
p1 = ggplot(data = data1,aes(录入日期,委托量)) +
geom_bar(fill="#009A60",stat = "identity") +
ylim(0,max(data1$委托量) * 1.3) +
labs(title="SE房源委托量及平均委托单价",x="日期",y="委托量") +
theme_bw(base_family = "STHeiti")
p2 = ggplot(data = data1,aes(录入日期,平均委托单价,group=1)) +
geom_line(color="#E0E123",size=1) +
geom_point(color="#E0E123",fill="#ffffff",size=2) +
ylim(min(data1$平均委托单价) * 0.95,max(data1$平均委托单价) * 1.05) +
labs(x="日期",y="元/平米") +
theme_bw(base_family = "STHeiti") %+replace%
theme(panel.grid=element_blank(),panel.background = element_rect(fill = NA))
g1 = ggplot_gtable(ggplot_build(p1))
g2 = ggplot_gtable(ggplot_build(p2))
# overlap the panel of 2nd plot on that of 1st plot
pp = c(subset(g1$layout, name == "panel", se = t:r))
pp
g = gtable_add_grob(g1, g2$grobs[[which(g2$layout$name == "panel")]], pp$t,
pp$l, pp$b, pp$l)
# axis tweaks
ia = which(g2$layout$name == "axis-l")
ga = g2$grobs[[ia]]
ax = ga$children[[2]]
ax$widths = rev(ax$widths)
ax$grobs = rev(ax$grobs)
ax$grobs[[1]]$x = ax$grobs[[1]]$x - unit(1, "npc") + unit(0.15, "cm")
g = gtable_add_cols(g, g2$widths[g2$layout[ia, ]$l], length(g$widths) - 1)
g = gtable_add_grob(g, ax, pp$t, length(g$widths) - 1, pp$b)
ia = which(g2$layout$name == "ylab")
ga = g2$grobs[[ia]]
ga$rot = 270
g = gtable_add_cols(g, g2$widths[g2$layout[ia, ]$l], length(g$widths) - 1)
g = gtable_add_grob(g, ga, pp$t, length(g$widths) - 1, pp$b)
# draw it
grid.draw(g)
})
output$plot2 = renderPlot({
data1 = mydata1
data1 = subset(data1,data1$城市==input$select1)
data1$录入日期 = as.Date(data1$录入日期,"%Y-%m-%d")
data1 = subset(data1,data1$录入日期 >= input$dates1[1] &
data1$录入日期 <= input$dates1[2])
data1 = subset(data1,data1$委托类型==input$select2)
data1 = subset(data1,select=input$indicators1)
ggplot(data = data1,aes(录入日期,平均建筑面积,group=1)) +
geom_line(color="#009A60") +
labs(title="SE房源委托平均建筑面积",x="日期",y="平米") +
theme_bw(base_family = "STHeiti")
})
}
library(shiny)
library(shinydashboard)
library(DT)
setwd("/Users/lixinyao/myprogram/shiny/lianjia_research")
# 标题
header = dashboardHeader(
title = "链家研究院数据平台"
#  dropdownMenu(type = "messages",
#               messageItem(
#                 from = "Sales Dept",
#                 message = "Sales are steady this month"
#               ),
#               messageItem(
#                 from = "New User",
#                 message = "How do I register?",
#                 icon = icon("question"),
#                 time = "13:45"
#               ),
#               messageItem(
#                 from = "Support",
#                 message = "The new server is ready.",
#                 icon = icon("life-ring"),
#                 time = "2014-12-01"
#               )
#  )
)
# 侧边栏
sidebar = dashboardSidebar(
sidebarMenu(id = "tabs",
sidebarSearchForm(textId = "searchText",buttonId = "searchButton",
label = "Search..."),
menuItem("宏观数据",tabName = "dashboard",icon = icon("dashboard"),
menuSubItem("整体宏观经济",tabName = "macro_1",icon = icon("angle-double-right")),
menuSubItem("北京",tabName = "macro_2",icon = icon("angle-double-right"))
),
menuItem("链家数据",tabName = "lianjia_data",icon = icon("home"),
menuSubItem("SE房源",tabName = "se_house",icon = icon("angle-double-right")),
menuSubItem("SE客源",tabName = "se_customer",icon = icon("angle-double-right")),
menuSubItem("SE成交",tabName = "se_constract",icon = icon("angle-double-right")),
menuSubItem("SE调价",tabName = "se_changeprice",icon = icon("angle-double-right")),
menuSubItem("链家新房",tabName = "new_house",icon = icon("angle-double-right"))
),
menuItem("网签数据",tabName = "netconstract_data",icon = icon("globe"),
menuSubItem("北京网签",tabName = "bj_netconstract",icon = icon("angle-double-right")),
menuSubItem("大连网签",tabName = "dl_netconstract",icon = icon("angle-double-right"))
),
menuItem("关于我们",tabName = "widgets",icon = icon("question"))
)
)
# 主体
body = dashboardBody(
tabItems(
tabItem(
tabName = "se_house",
fluidRow(
column(width = 12,
tabBox(width = 3,
tabPanel(h5("筛选条件"),
selectInput("select1",label = h5("选择城市"),
choices = unique(mydata1$城市), selected = "北京"),
dateRangeInput("dates1",label = h5("选择日期"),language = "zh-CN"),
selectInput("select2",label = h5("委托类型"),
choices = unique(mydata1$委托类型), selected = "出售"),
checkboxGroupInput("indicators1",label = h5("选择指标"),
choices = names(mydata1),
selected = c("城市","录入日期","委托类型","委托量")),
submitButton("确定")),
tabPanel(h5("下载"),
radioButtons("format","文档格式",c("Excel","PDF","HTML","Word"),
inline = TRUE),
downloadButton("downloadReport")
)
),
tabBox(width = 9,
tabPanel(h5("报表"),
DT::dataTableOutput('table1')),
tabPanel(h5("图形"),
plotOutput('plot1',width = "70%",height = "350px"),
plotOutput('plot2',width = "70%",height = "350px")
),
tabPanel(h5("数据挖掘"))
))
)
)
))
# UI
ui = dashboardPage(header,sidebar,body)
shinyApp(ui,server)
# Server
library(shiny)
library(shinydashboard)
library(RMySQL)
library(ggplot2)
library(gtable)
library(grid)
# 读入数据
con1 = dbConnect(RMySQL::MySQL(),
dbname = 'se_secondhand_house',
username = 'lixinyao',
password = 'lixin131820',
host = '127.0.0.1')# 设置连接
res1 = dbSendQuery(con1,"select 城市,录入时间2 as 录入日期,委托类型,
count(房源编号) as 委托量,
avg(case when 建筑面积 > 4 and 建筑面积 < 50000
and 房屋用途 in ('别墅','公寓','经济适用房','普通住宅')
and 建成年代 > 1900
and 室数 < 9
and 总价/建筑面积 > 1 and 总价/建筑面积 < 15
then 总价/建筑面积 else 0 end)*10000 as 平均委托单价,
avg(case when 建筑面积 > 4 and 建筑面积 < 50000
and 建成年代 > 1900
and 室数 < 9
then 建筑面积 else 0 end) as 平均建筑面积
from SE房源
group by 城市,录入日期,委托类型
order by 城市,录入日期;")# 查询
mydata1 = dbFetch(res1,n=-1)
server = function(input,output){
output$table1 = DT::renderDataTable(DT::datatable({
data1 = mydata1
data1 = subset(data1,data1$城市==input$select1)
data1$录入日期 = as.Date(data1$录入日期,"%Y-%m-%d")
data1 = subset(data1,data1$录入日期 >= input$dates1[1] &
data1$录入日期 < input$dates1[2])
data1 = subset(data1,data1$委托类型==input$select2)
data1 = subset(data1,select=input$indicators1)
}))
output$plot1 = renderPlot({
data1 = mydata1
data1 = subset(data1,data1$城市==input$select1)
data1$录入日期 = as.Date(data1$录入日期,"%Y-%m-%d")
data1 = subset(data1,data1$录入日期 >= input$dates1[1] &
data1$录入日期 <= input$dates1[2])
data1 = subset(data1,data1$委托类型==input$select2)
data1 = subset(data1,select=input$indicators1)
p1 = ggplot(data = data1,aes(录入日期,委托量)) +
geom_bar(fill="#009A60",stat = "identity") +
ylim(0,max(data1$委托量) * 1.3) +
labs(title="SE房源委托量及平均委托单价",x="日期",y="委托量") +
theme_bw(base_family = "STHeiti")
p2 = ggplot(data = data1,aes(录入日期,平均委托单价,group=1)) +
geom_line(color="#E0E123",size=1) +
geom_point(color="#E0E123",fill="#ffffff",size=2) +
ylim(min(data1$平均委托单价) * 0.95,max(data1$平均委托单价) * 1.05) +
labs(x="日期",y="元/平米") +
theme_bw(base_family = "STHeiti") %+replace%
theme(panel.grid=element_blank(),panel.background = element_rect(fill = NA))
g1 = ggplot_gtable(ggplot_build(p1))
g2 = ggplot_gtable(ggplot_build(p2))
# overlap the panel of 2nd plot on that of 1st plot
pp = c(subset(g1$layout, name == "panel", se = t:r))
pp
g = gtable_add_grob(g1, g2$grobs[[which(g2$layout$name == "panel")]], pp$t,
pp$l, pp$b, pp$l)
# axis tweaks
ia = which(g2$layout$name == "axis-l")
ga = g2$grobs[[ia]]
ax = ga$children[[2]]
ax$widths = rev(ax$widths)
ax$grobs = rev(ax$grobs)
ax$grobs[[1]]$x = ax$grobs[[1]]$x - unit(1, "npc") + unit(0.15, "cm")
g = gtable_add_cols(g, g2$widths[g2$layout[ia, ]$l], length(g$widths) - 1)
g = gtable_add_grob(g, ax, pp$t, length(g$widths) - 1, pp$b)
ia = which(g2$layout$name == "ylab")
ga = g2$grobs[[ia]]
ga$rot = 270
g = gtable_add_cols(g, g2$widths[g2$layout[ia, ]$l], length(g$widths) - 1)
g = gtable_add_grob(g, ga, pp$t, length(g$widths) - 1, pp$b)
# draw it
grid.draw(g)
})
output$plot2 = renderPlot({
data1 = mydata1
data1 = subset(data1,data1$城市==input$select1)
data1$录入日期 = as.Date(data1$录入日期,"%Y-%m-%d")
data1 = subset(data1,data1$录入日期 >= input$dates1[1] &
data1$录入日期 <= input$dates1[2])
data1 = subset(data1,data1$委托类型==input$select2)
data1 = subset(data1,select=input$indicators1)
ggplot(data = data1,aes(录入日期,平均建筑面积,group=1)) +
geom_line(color="#009A60") +
labs(title="SE房源委托平均建筑面积",x="日期",y="平米") +
theme_bw(base_family = "STHeiti")
})
}
library(shiny)
library(shinydashboard)
library(DT)
setwd("/Users/lixinyao/myprogram/shiny/lianjia_research")
# 标题
header = dashboardHeader(
title = "链家研究院数据平台"
#  dropdownMenu(type = "messages",
#               messageItem(
#                 from = "Sales Dept",
#                 message = "Sales are steady this month"
#               ),
#               messageItem(
#                 from = "New User",
#                 message = "How do I register?",
#                 icon = icon("question"),
#                 time = "13:45"
#               ),
#               messageItem(
#                 from = "Support",
#                 message = "The new server is ready.",
#                 icon = icon("life-ring"),
#                 time = "2014-12-01"
#               )
#  )
)
# 侧边栏
sidebar = dashboardSidebar(
sidebarMenu(id = "tabs",
sidebarSearchForm(textId = "searchText",buttonId = "searchButton",
label = "Search..."),
menuItem("宏观数据",tabName = "dashboard",icon = icon("dashboard"),
menuSubItem("整体宏观经济",tabName = "macro_1",icon = icon("angle-double-right")),
menuSubItem("北京",tabName = "macro_2",icon = icon("angle-double-right"))
),
menuItem("链家数据",tabName = "lianjia_data",icon = icon("home"),
menuSubItem("SE房源",tabName = "se_house",icon = icon("angle-double-right")),
menuSubItem("SE客源",tabName = "se_customer",icon = icon("angle-double-right")),
menuSubItem("SE成交",tabName = "se_constract",icon = icon("angle-double-right")),
menuSubItem("SE调价",tabName = "se_changeprice",icon = icon("angle-double-right")),
menuSubItem("链家新房",tabName = "new_house",icon = icon("angle-double-right"))
),
menuItem("网签数据",tabName = "netconstract_data",icon = icon("globe"),
menuSubItem("北京网签",tabName = "bj_netconstract",icon = icon("angle-double-right")),
menuSubItem("大连网签",tabName = "dl_netconstract",icon = icon("angle-double-right"))
),
menuItem("关于我们",tabName = "widgets",icon = icon("question"))
)
)
# 主体
body = dashboardBody(
tabItems(
tabItem(
tabName = "se_house",
fluidRow(
column(width = 12,
tabBox(width = 3,
tabPanel(h5("筛选条件"),
selectInput("select1",label = h5("选择城市"),
choices = unique(mydata1$城市), selected = "北京"),
dateRangeInput("dates1",label = h5("选择日期"),language = "zh-CN"),
selectInput("select2",label = h5("委托类型"),
choices = unique(mydata1$委托类型), selected = "出售"),
checkboxGroupInput("indicators1",label = h5("选择指标"),
choices = names(mydata1),
selected = c("城市","录入日期","委托类型","委托量")),
submitButton("确定")),
tabPanel(h5("下载"),
radioButtons("format","文档格式",c("Excel","PDF","HTML","Word"),
inline = TRUE),
downloadButton("downloadReport")
)
),
tabBox(width = 9,
tabPanel(h5("报表"),
DT::dataTableOutput('table1')),
tabPanel(h5("图形"),
plotOutput('plot1',width = "70%",height = "350px"),
plotOutput('plot2',width = "70%",height = "350px")
),
tabPanel(h5("数据挖掘"))
))
)
)
))
# UI
ui = dashboardPage(header,sidebar,body)
shinyApp(ui,server)
