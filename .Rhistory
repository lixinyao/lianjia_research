),
tabItem(
tabName = "widgets",
h2("Widgets tab content")
)
)
)
# UI
ui = dashboardPage(header,sidebar,body)
# Server
server = function(input,output){
set.seed(122)
histdata = rnorm(500)
output$plot1 = renderPlot({
data = histdata[seq_len(input$slider)]
hist(data)
})
}
shinyApp(ui,server)
library(shiny)
library(shinydashboard)
# 标题
header = dashboardHeader(
title = "链家研究院数据平台",
dropdownMenu(type = "messages",
messageItem(
from = "Sales Dept",
message = "Sales are steady this month"
),
messageItem(
from = "New User",
message = "How do I register?",
icon = icon("question"),
time = "13:45"
),
messageItem(
from = "Support",
message = "The new server is ready.",
icon = icon("life-ring"),
time = "2014-12-01"
)
))
# 侧边栏
sidebar = dashboardSidebar(
sidebarMenu(id = "tabs",
menuItem("宏观经济数据",tabName = "dashboard",icon = icon("dashboard"),
menuSubItem("整体宏观经济",tabName = "macro_1",icon = icon("angle-double-right")),
menuSubItem("北京",tabName = "macro_2",icon = icon("angle-double-right"))
),
menuItem("房地产数据",tabName = "widgets",icon = icon("th")),
menuItem("关于我们",tabName = "widgets",icon = icon("question"))
)
)
# 主体
body = dashboardBody(
tabItems(
tabItem(
tabName = "macro_1",
fluidRow(
column(width = 4,
tabBox(width = NULL,
tabPanel(h5("筛选条件"),
dateRangeInput("dates",label = h6("选择日期"),language = "zh-CN"),
checkboxGroupInput("indicators",label = h6("选择指标"),
choices = list("GDP"=1,"人均GDP"=2,"M2"=3,
"CPI"=4,"PPI"=5),
selected=1)),
tabPanel(h5("下载"),
radioButtons("format","文档格式",c("Excel","PDF","HTML","Word"),
iinline = TRUE),
downloadButton("downloadReport")
)
)))
)
),
tabItem(
tabName = "widgets",
h2("Widgets tab content")
)
)
)
# UI
ui = dashboardPage(header,sidebar,body)
# Server
server = function(input,output){
set.seed(122)
histdata = rnorm(500)
output$plot1 = renderPlot({
data = histdata[seq_len(input$slider)]
hist(data)
})
}
shinyApp(ui,server)
shiny::runApp('myprogram/shiny/App-1')
library(shiny)
library(shinydashboard)
# 标题
header = dashboardHeader(
title = "链家研究院数据平台",
dropdownMenu(type = "messages",
messageItem(
from = "Sales Dept",
message = "Sales are steady this month"
),
messageItem(
from = "New User",
message = "How do I register?",
icon = icon("question"),
time = "13:45"
),
messageItem(
from = "Support",
message = "The new server is ready.",
icon = icon("life-ring"),
time = "2014-12-01"
)
))
# 侧边栏
sidebar = dashboardSidebar(
sidebarMenu(id = "tabs",
menuItem("宏观经济数据",tabName = "dashboard",icon = icon("dashboard"),
menuSubItem("整体宏观经济",tabName = "macro_1",icon = icon("angle-double-right")),
menuSubItem("北京",tabName = "macro_2",icon = icon("angle-double-right"))
),
menuItem("房地产数据",tabName = "widgets",icon = icon("th")),
menuItem("关于我们",tabName = "widgets",icon = icon("question"))
)
)
# 主体
body = dashboardBody(
tabItems(
tabItem(
tabName = "macro_1",
fluidRow(
column(width = 4,
tabBox(width = NULL,
tabPanel(h5("筛选条件"),
dateRangeInput("dates",label = h6("选择日期"),language = "zh-CN"),
checkboxGroupInput("indicators",label = h6("选择指标"),
choices = list("GDP"=1,"人均GDP"=2,"M2"=3,
"CPI"=4,"PPI"=5),
selected=1)),
tabPanel(h5("下载"),
radioButtons("format","文档格式",c("Excel","PDF","HTML","Word"),
inline = TRUE),
downloadButton("downloadReport")
)
)))
)
),
tabItem(
tabName = "widgets",
h2("Widgets tab content")
)
)
# UI
ui = dashboardPage(header,sidebar,body)
# Server
server = function(input,output){
set.seed(122)
histdata = rnorm(500)
output$plot1 = renderPlot({
data = histdata[seq_len(input$slider)]
hist(data)
})
}
shinyApp(ui,server)
library(shiny)
library(shinydashboard)
# 标题
header = dashboardHeader(
title = "链家研究院数据平台",
dropdownMenu(type = "messages",
messageItem(
from = "Sales Dept",
message = "Sales are steady this month"
),
messageItem(
from = "New User",
message = "How do I register?",
icon = icon("question"),
time = "13:45"
),
messageItem(
from = "Support",
message = "The new server is ready.",
icon = icon("life-ring"),
time = "2014-12-01"
)
))
# 侧边栏
sidebar = dashboardSidebar(
sidebarMenu(id = "tabs",
menuItem("宏观经济数据",tabName = "dashboard",icon = icon("dashboard"),
menuSubItem("整体宏观经济",tabName = "macro_1",icon = icon("angle-double-right")),
menuSubItem("北京",tabName = "macro_2",icon = icon("angle-double-right"))
),
menuItem("房地产数据",tabName = "widgets",icon = icon("th")),
menuItem("关于我们",tabName = "widgets",icon = icon("question"))
)
)
# 主体
body = dashboardBody(
tabItems(
tabItem(
tabName = "macro_1",
fluidRow(
column(width = 4,
tabBox(width = NULL,
tabPanel(h5("筛选条件"),
dateRangeInput("dates",label = h6("选择日期"),language = "zh-CN"),
checkboxGroupInput("indicators",label = h6("选择指标"),
choices = list("GDP"=1,"人均GDP"=2,"M2"=3,
"CPI"=4,"PPI"=5),
selected=1)),
tabPanel(h5("下载"),
radioButtons("format","文档格式",c("Excel","PDF","HTML","Word"),
inline = TRUE),
downloadButton("downloadReport")
)
)))
)
),
tabItem(
tabName = "widgets",
h2("Widgets tab content")
)
)
# UI
ui = dashboardPage(header,sidebar,body)
# Server
server = function(input,output){
set.seed(122)
histdata = rnorm(500)
output$plot1 = renderPlot({
data = histdata[seq_len(input$slider)]
hist(data)
})
}
shinyApp(ui,server)
library(shiny)
library(shinydashboard)
# 标题
header = dashboardHeader(
title = "链家研究院数据平台",
dropdownMenu(type = "messages",
messageItem(
from = "Sales Dept",
message = "Sales are steady this month"
),
messageItem(
from = "New User",
message = "How do I register?",
icon = icon("question"),
time = "13:45"
),
messageItem(
from = "Support",
message = "The new server is ready.",
icon = icon("life-ring"),
time = "2014-12-01"
)
))
# 侧边栏
sidebar = dashboardSidebar(
sidebarMenu(id = "tabs",
menuItem("宏观经济数据",tabName = "dashboard",icon = icon("dashboard"),
menuSubItem("整体宏观经济",tabName = "macro_1",icon = icon("angle-double-right")),
menuSubItem("北京",tabName = "macro_2",icon = icon("angle-double-right"))
),
menuItem("房地产数据",tabName = "widgets",icon = icon("th")),
menuItem("关于我们",tabName = "widgets",icon = icon("question"))
)
)
# 主体
body = dashboardBody(
tabItems(
tabItem(
tabName = "macro_1",
fluidRow(
column(width = 4,
tabBox(width = NULL,
tabPanel(h5("筛选条件"),
dateRangeInput("dates",label = h6("选择日期"),language = "zh-CN"),
checkboxGroupInput("indicators",label = h6("选择指标"),
choices = list("GDP"=1,"人均GDP"=2,"M2"=3,
"CPI"=4,"PPI"=5),
selected=1)),
tabPanel(h5("下载"),
radioButtons("format","文档格式",c("Excel","PDF","HTML","Word"),
inline = TRUE),
downloadButton("downloadReport")
)
)))
)
),
tabItem(
tabName = "widgets",
h2("Widgets tab content")
)
)
# UI
ui = dashboardPage(header,sidebar,body)
# Server
server = function(input,output){
set.seed(122)
histdata = rnorm(500)
output$plot1 = renderPlot({
data = histdata[seq_len(input$slider)]
hist(data)
})
}
shinyApp(ui,server)
# Server
server = function(input,output){
set.seed(122)
histdata = rnorm(500)
output$plot1 = renderPlot({
data = histdata[seq_len(input$slider)]
hist(data)
})
}
shinyApp(ui,server)
shiny::runApp('myprogram/shiny/lianjia_research')
shiny::runApp('myprogram/shiny/lianjia_research')
runApp("lianjia_research")
# Server
server = function(input,output){
set.seed(122)
histdata = rnorm(500)
output$plot1 = renderPlot({
data = histdata[seq_len(input$slider)]
hist(data)
})
}
runApp("lianjia_research")
shiny::runApp('myprogram/shiny/lianjia_research')
shiny::runApp("myprogram/shiny/lianjia_research")
library(RMySQL)
con1 = dbConnect(RMySQL::MySQL(),
dbname = 'wind_macro_economic',
username = 'root',
password = 'lixin131820',
host = '127.0.0.1')# 设置连接
res = dbSendQuery(con1,"select * from 整体宏观经济;")# 查询
mydata = dbFetch(res)# 读入数据框
head(mydata)
library(ggplot2)
ggplot(mydata,aes(日期,值,color = 指标代码)) + geom_line()
ggplot(mydata,aes(日期,值,color = 指标代码,group=1)) + geom_line()
ggplot(mydata,aes(日期,值,color = 指标代码,group=指标代码)) + geom_line()
ggplot(mydata,aes(日期,值,color = 指标代码),group=1) + geom_line()
ggplot(mydata,aes(日期,值,color = 指标代码),group=指标代码) + geom_line()
ggplot(mydata,aes(日期,值,color = 指标代码)) + geom_line(group=指标代码)
ggplot(mydata,aes(日期,值,color = 指标代码)) + geom_line()
ggplot(mydata,aes(日期,值,color = 指标代码),group=1) + geom_line()
ggplot(mydata,aes(日期,值,color = 指标代码),group=日期) + geom_line()
ggplot(mydata,aes(日期,值,color = 指标代码,group=日期)) + geom_line()
ggplot(mydata,aes(日期,值)) + geom_line()
str(mydata)
as.Date(mydata$日期)
ggplot(mydata,aes(日期,值)) + geom_line()
ggplot(mydata,aes(日期,值,color=指标代码)) + geom_line()
str(mydata)
mydata$日期 = as.Date(mydata$日期)
ggplot(mydata,aes(日期,值,color=指标代码)) + geom_line()
mydata
整体宏观经济
mydata = dbFetch(res1)# 读入数据框
con1 = dbConnect(RMySQL::MySQL(),
dbname = 'wind_macro_economic',
username = 'root',
password = 'lixin131820',
host = '127.0.0.1')# 设置连接
res1 = dbSendQuery(con1,"select * from 整体宏观经济;")# 查询
mydata = dbFetch(res1)# 读入数据框
mydata
res1 = dbSendQuery(con1,"select * from 整体宏观经济 limit 500000;")# 查询
con1 = dbConnect(RMySQL::MySQL(),
dbname = 'wind_macro_economic',
username = 'root',
password = 'lixin131820',
host = '127.0.0.1')# 设置连接
res1 = dbSendQuery(con1,"select * from 整体宏观经济 limit 500000;")# 查询
mydata = dbFetch(res1)# 读入数据框
mydata
con1 = dbConnect(RMySQL::MySQL(),
dbname = 'wind_macro_economic',
username = 'root',
password = 'lixin131820',
host = '127.0.0.1')# 设置连接
res1 = dbSendQuery(con1,"select * from 北京宏观经济;")# 查询
mydata = dbFetch(res1)# 读入数据框
mydata
res1 = dbSendQuery(con1,"select * from 北京宏观经济 limit 50000;")# 查询
con1 = dbConnect(RMySQL::MySQL(),
dbname = 'wind_macro_economic',
username = 'root',
password = 'lixin131820',
host = '127.0.0.1')# 设置连接
res1 = dbSendQuery(con1,"select * from 北京宏观经济 limit 50000;")# 查询
mydata = dbFetch(res1)# 读入数据框
mydata
con1 = dbConnect(RMySQL::MySQL(),
dbname = 'wind_macro_economic',
username = 'root',
password = 'lixin131820',
host = '127.0.0.1')# 设置连接
res1 = dbSendQuery(con1,"select * from 北京宏观经济 limit 50000;")# 查询
mydata = dbFetch(res1,n=-1)# 读入数据框
mydata
res1 = dbSendQuery(con1,"select * from 整体宏观经济 limit 50000;")# 查询
mydata = dbFetch(res1,n=-1)# 读入数据框
head(mydata)
mydata
res1 = dbSendQuery(con1,"select * from 北京宏观经济;")# 查询
mydata = dbFetch(res1,n=-1)# 读入数据框
library(ggplot2)
ggplot(mydata,aes(日期,值,color=指标代码)) + geom_line()
ggplot(mydata,aes(日期,值,color=指标代码,group=1)) + geom_line()
mydata$日期 = as.Date(mydata$日期)
ggplot(mydata,aes(日期,值,color=指标代码,group=1)) + geom_line()
# Server
library(shiny)
library(shinydashboard)
library(RMySQL)
library(ggplot2)
# 读入数据
# wind宏观经济
con1 = dbConnect(RMySQL::MySQL(),
dbname = 'se_secondhand_house',
username = 'lixinyao',
password = 'lixin131820',
host = '127.0.0.1')# 设置连接
res1 = dbSendQuery(con1,"select * from SE房源;")# 查询
mydata = dbFetch(res1,n=-1)# 读入数据框
server = function(input,output){
output$table = DT::renderDataTable(DT::datatable({
data = mydata
data = subset(data,select=input$indicators)
data = subset(data,data$录入时间==input$dates)
}))
}
library(shiny)
library(shinydashboard)
library(DT)
setwd("/Users/lixinyao/myprogram/shiny/lianjia_research")
# 标题
header = dashboardHeader(
title = "链家研究院数据平台"
#  dropdownMenu(type = "messages",
#               messageItem(
#                 from = "Sales Dept",
#                 message = "Sales are steady this month"
#               ),
#               messageItem(
#                 from = "New User",
#                 message = "How do I register?",
#                 icon = icon("question"),
#                 time = "13:45"
#               ),
#               messageItem(
#                 from = "Support",
#                 message = "The new server is ready.",
#                 icon = icon("life-ring"),
#                 time = "2014-12-01"
#               )
#  )
)
# 侧边栏
sidebar = dashboardSidebar(
sidebarMenu(id = "tabs",
sidebarSearchForm(textId = "searchText",buttonId = "searchButton",
label = "Search..."),
menuItem("宏观经济数据",tabName = "dashboard",icon = icon("dashboard"),
menuSubItem("整体宏观经济",tabName = "macro_1",icon = icon("angle-double-right")),
menuSubItem("北京",tabName = "macro_2",icon = icon("angle-double-right"))
),
menuItem("链家房地产数据",tabName = "lianjia_data",icon = icon("dashboard"),
menuSubItem("SE二手房",tabName = "se_secondhand_house",icon = icon("angle-double-right")),
menuSubItem("新房",tabName = "new_house",icon = icon("angle-double-right"))
),
menuItem("关于我们",tabName = "widgets",icon = icon("question"))
)
)
# 主体
body = dashboardBody(
tabItems(
tabItem(
tabName = "se_secondhand_house",
fluidRow(
column(width = 12,
tabBox(width = NULL,
tabPanel(h5("筛选条件"),
dateRangeInput("dates",label = h6("选择日期"),language = "zh-CN"),
checkboxGroupInput("indicators",label = h6("选择指标"),
choices = names(mydata),
selected="房源编号")),
tabPanel(h5("下载"),
radioButtons("format","文档格式",c("Excel","PDF","HTML","Word"),
inline = TRUE),
downloadButton("downloadReport")
),
tabPanel(h5("数据"),
DT::dataTableOutput('table'))
)))
)
)
)
# UI
ui = dashboardPage(header,sidebar,body)
shinyApp(ui,server)
