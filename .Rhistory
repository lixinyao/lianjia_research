mydata6 = mydata6[,c("月","成交","客房比")]
mydata6 = melt(mydata6,id="月")
mydata6 = na.omit(mydata6)
head(mydata6)
mydata6 = ddply(mydata6,.(variable),
transform,value=scale(value))
ggplot(mydata6,aes(月,value,color=variable)) + geom_line()
ggplot(mydata6,aes(月,value,color=variable)) +
geom_line() + theme(text = element_text(family = "STHeiti"))
ggplot(mydata6,aes(月,value,color=variable)) +
geom_line() + labs(title="需求供给与成交关系",x="月",y="值") +
theme(text = element_text(family = "STHeiti"))
res6 = dbSendQuery(con1,"select yearweek(合同录入日期) as 周,
count(合同录入日期) as 成交
from SE成交
group by 周
order by 周;")
library(RMySQL)
library(reshape2)
library(ggplot2)
library(plyr)
# 设置二手房连接
con1 = dbConnect(RMySQL::MySQL(),
dbname = 'se_secondhand_house',
username = 'lixinyao',
password = 'lixin131820',
host = '127.0.0.1')# 设置连接
# 新增房源
res1 = dbSendQuery(con1,"select date_format(录入时间2,'%Y-%m') as 月,
count(房源编号) as 新增房源
from SE房源
where 委托类型 = '出售' and 城市 = '北京'
group by 月
order by 月;")
mydata1 = dbFetch(res1,n=-1)
dbClearResult(res1)# 清除查询
mydata1$月 = as.Date(paste(mydata1$月,1,sep="-"),"%Y-%m-%d")
mydata1 = melt(mydata1,id="月")
mydata1 = na.omit(mydata1)
# 新增客源
res2 = dbSendQuery(con1,"select date_format(录入时间,'%Y-%m') as 月,
count(客源编号) as 新增客源
from SE客源
where 委托类型 = '求购' and 客户所在城市 = '北京'
group by 月
order by 月;")
mydata2 = dbFetch(res2,n=-1)
dbClearResult(res2)# 清除查询
mydata2$月 = as.Date(paste(mydata2$月,1,sep="-"),"%Y-%m-%d")
mydata2 = melt(mydata2,id="月")
mydata2 = na.omit(mydata2)
# 成交
res4 = dbSendQuery(con1,"select date_format(合同录入日期,'%Y-%m') as 月,
count(合同录入日期) as 成交
from SE成交
where 交易类型 = '买卖' and 房_城市 = '北京'
group by 月
order by 月;")
mydata4 = dbFetch(res4,n=-1)
dbClearResult(res4)# 清除查询
mydata4$月 = as.Date(paste(mydata4$月,1,sep="-"),"%Y-%m-%d")
mydata4 = melt(mydata4,id="月")
mydata4 = na.omit(mydata4)
# 网签
res5 = dbSendQuery(con1,"select date_format(成交时间,'%Y-%m') as 月,
count(成交时间) as 网签
from 北京网签
group by 月
order by 月;")
mydata5 = dbFetch(res5,n=-1)
dbClearResult(res5)# 清除查询
mydata5$月 = as.Date(paste(mydata5$月,1,sep="-"),"%Y-%m-%d")
mydata5 = melt(mydata5,id="月")
mydata5 = na.omit(mydata5)
# 合并数据框
mydata6 = rbind(mydata1,mydata2,mydata4,mydata5)
mydata6 = dcast(mydata6,月~variable)
mydata6$客房比 = mydata6$新增客源/mydata6$新增房源
mydata6 = mydata6[,c("月","成交","客房比")]
mydata6 = melt(mydata6,id="月")
mydata6 = na.omit(mydata6)
head(mydata6)
mydata6 = ddply(mydata6,.(variable),
transform,value=scale(value))
ggplot(mydata6,aes(月,value,color=variable)) +
geom_line() + labs(title="需求供给与成交关系",x="月",y="值") +
theme(text = element_text(family = "STHeiti"))
head(mydata6)
mydata6 = rbind(mydata1,mydata2,mydata4,mydata5)
mydata6 = dcast(mydata6,月~variable)
mydata6$客房比 = mydata6$新增客源/mydata6$新增房源
mydata6 = mydata6[,c("月","成交","客房比")]
mydata6 = melt(mydata6,id="月")
mydata6 = na.omit(mydata6)
mydata6
res6 = dbSendQuery(con1,"select date_format(合同录入日期,'%Y-%m') as 月,
avg(成交价_元) as 平均成交价
from SE成交
group by 月
order by 月;")
mydata6 = dbFetch(res6,n=-1)
dbClearResult(res6)# 清除查询
mydata6$月 = as.Date(paste(mydata6$月,1,sep="-"),"%Y-%m-%d")
mydata6 = melt(mydata6,id="月")
mydata6 = na.omit(mydata6)
# 合并数据框
mydata7 = rbind(mydata1,mydata2,mydata4,mydata5,mydata6)
mydata7 = dcast(mydata7,月~variable)
mydata7$客房比 = mydata7$新增客源/mydata7$新增房源
mydata7 = mydata7[,c("月","成交","成交价","客房比")]
mydata7 = melt(mydata7,id="月")
mydata7 = na.omit(mydata7)
head(mydata7)
mydata6 = ddply(mydata7,.(variable),
transform,value=scale(value))
ggplot(mydata7,aes(月,value,color=variable)) +
geom_line() + labs(title="成交量、价、供需",x="月",y="值") +
theme(text = element_text(family = "STHeiti"))
mydata6
mydata7 = ddply(mydata7,.(variable),
transform,value=scale(value))
ggplot(mydata7,aes(月,value,color=variable)) +
geom_line() + labs(title="成交量、价、供需",x="月",y="值") +
theme(text = element_text(family = "STHeiti"))
mydata7 = rbind(mydata1,mydata2,mydata4,mydata5,mydata6)
mydata7 = dcast(mydata7,月~variable)
mydata7$客房比 = mydata7$新增客源/mydata7$新增房源
mydata7
mydata7 = rbind(mydata1,mydata2,mydata4,mydata5,mydata6)
mydata7 = dcast(mydata7,月~variable)
mydata7$客房比 = mydata7$新增客源/mydata7$新增房源
mydata7 = mydata7[,c("月","成交","平均成交价","客房比")]
mydata7 = melt(mydata7,id="月")
mydata7 = na.omit(mydata7)
head(mydata7)
mydata7 = ddply(mydata7,.(variable),
transform,value=scale(value))
ggplot(mydata7,aes(月,value,color=variable)) +
geom_line() + labs(title="成交量、价、供需",x="月",y="值") +
theme(text = element_text(family = "STHeiti"))
mydata7
library(RMySQL)
library(reshape2)
library(ggplot2)
library(plyr)
# 设置二手房连接
con1 = dbConnect(RMySQL::MySQL(),
dbname = 'se_secondhand_house',
username = 'lixinyao',
password = 'lixin131820',
host = '127.0.0.1')# 设置连接
# 新增房源
res1 = dbSendQuery(con1,"select date_format(录入时间2,'%Y-%m') as 月,
count(房源编号) as 新增房源
from SE房源
where 委托类型 = '出售' and 城市 = '北京'
group by 月
order by 月;")
mydata1 = dbFetch(res1,n=-1)
dbClearResult(res1)# 清除查询
mydata1$月 = as.Date(paste(mydata1$月,1,sep="-"),"%Y-%m-%d")
mydata1 = melt(mydata1,id="月")
mydata1 = na.omit(mydata1)
# 新增客源
res2 = dbSendQuery(con1,"select date_format(录入时间,'%Y-%m') as 月,
count(客源编号) as 新增客源
from SE客源
where 委托类型 = '求购' and 客户所在城市 = '北京'
group by 月
order by 月;")
mydata2 = dbFetch(res2,n=-1)
dbClearResult(res2)# 清除查询
mydata2$月 = as.Date(paste(mydata2$月,1,sep="-"),"%Y-%m-%d")
mydata2 = melt(mydata2,id="月")
mydata2 = na.omit(mydata2)
# 成交
res4 = dbSendQuery(con1,"select date_format(合同录入日期,'%Y-%m') as 月,
count(合同录入日期) as 成交
from SE成交
where 交易类型 = '买卖' and 房_城市 = '北京'
group by 月
order by 月;")
mydata4 = dbFetch(res4,n=-1)
dbClearResult(res4)# 清除查询
mydata4$月 = as.Date(paste(mydata4$月,1,sep="-"),"%Y-%m-%d")
mydata4 = melt(mydata4,id="月")
mydata4 = na.omit(mydata4)
# 网签
res5 = dbSendQuery(con1,"select date_format(成交时间,'%Y-%m') as 月,
count(成交时间) as 网签
from 北京网签
group by 月
order by 月;")
mydata5 = dbFetch(res5,n=-1)
dbClearResult(res5)# 清除查询
mydata5$月 = as.Date(paste(mydata5$月,1,sep="-"),"%Y-%m-%d")
mydata5 = melt(mydata5,id="月")
mydata5 = na.omit(mydata5)
# 平均成交价
res6 = dbSendQuery(con1,"select date_format(合同录入日期,'%Y-%m') as 月,
avg(成交价_元) as 平均成交价
from SE成交
group by 月
order by 月;")
mydata6 = dbFetch(res6,n=-1)
dbClearResult(res6)# 清除查询
mydata6$月 = as.Date(paste(mydata6$月,1,sep="-"),"%Y-%m-%d")
mydata6 = melt(mydata6,id="月")
mydata6 = na.omit(mydata6)
# 合并数据框
mydata7 = rbind(mydata1,mydata2,mydata4,mydata5,mydata6)
mydata7 = dcast(mydata7,月~variable)
mydata7$客房比 = mydata7$新增客源/mydata7$新增房源
mydata7 = mydata7[,c("月","成交","平均成交价","客房比")]
mydata7 = melt(mydata7,id="月")
mydata7 = na.omit(mydata7)
head(mydata7)
mydata7 = ddply(mydata7,.(variable),
transform,value=scale(value))
ggplot(mydata7,aes(月,value,color=variable)) +
geom_line() + labs(title="成交量、价、供需",x="月",y="值") +
theme(text = element_text(family = "STHeiti"))
ggplot(mydata7,aes(月,value,color=variable)) +
geom_line(size=1) + labs(title="成交量、价、供需",x="月",y="值") +
theme(text = element_text(family = "STHeiti"))
ggplot(mydata7,aes(月,value,color=variable)) +
geom_line(size=0.5) + labs(title="成交量、价、供需",x="月",y="值") +
theme(text = element_text(family = "STHeiti"))
ggplot(mydata7,aes(月,value,color=variable)) +
geom_line(size=2) + labs(title="成交量、价、供需",x="月",y="值") +
theme(text = element_text(family = "STHeiti"))
ggplot(mydata7,aes(月,value,color=variable)) +
geom_line() + labs(title="成交量、价、供需",x="月",y="值") +
theme(text = element_text(family = "STHeiti"))
res8 = dbSendQuery(con1,"select * from SE成交;")
mydata8 = dbFetch(res8,n=-1)
dbClearResult(res8)
head(mydata8)
res4 = dbSendQuery(con1,"select date_format(合同录入日期,'%Y-%m') as 月,
count(合同录入日期) as 成交
from SE成交
where 交易类型 = '买卖' and 房_城市 = '北京'
group by 月
order by 月;")
mydata4 = dbFetch(res4,n=-1)
dbClearResult(res4)# 清除查询
mydata4$月 = as.Date(paste(mydata4$月,1,sep="-"),"%Y-%m-%d")
mydata4 = melt(mydata4,id="月")
ggplot(mydata4,aes(月,成交)) +
geom_line(color = "#00AE66",size=1) +
labs(x="时间",y="成交",title="链家成交趋势") +
theme(text = element_text(family = "STHeiti"))
mydata4
mydata4 = na.omit(mydata4)
ggplot(mydata4,aes(月,value)) +
geom_line(color = "#00AE66",size=1) +
labs(x="时间",y="成交",title="链家成交趋势") +
theme(text = element_text(family = "STHeiti"))
res5 = dbSendQuery(con1,"select date_format(成交时间,'%Y-%m') as 月,
count(成交时间) as 网签
from 北京网签
group by 月
order by 月;")
mydata5 = dbFetch(res5,n=-1)
dbClearResult(res5)# 清除查询
mydata5$月 = as.Date(paste(mydata5$月,1,sep="-"),"%Y-%m-%d")
mydata5 = melt(mydata5,id="月")
mydata5 = na.omit(mydata5)
ggplot(mydata5,aes(月,value)) +
geom_line(color = "#00AE66",size=1) +
labs(x="时间",y="成交",title="链家成交趋势") +
theme(text = element_text(family = "STHeiti"))
mydata5
res4 = dbSendQuery(con1,"select date_format(合同录入日期,'%Y-%m') as 月,
count(合同录入日期) as 链家成交
from SE成交
where 交易类型 = '买卖' and 房_城市 = '北京'
group by 月
order by 月;")
mydata4 = dbFetch(res4,n=-1)
dbClearResult(res4)# 清除查询
mydata4$月 = as.Date(paste(mydata4$月,1,sep="-"),"%Y-%m-%d")
mydata4 = melt(mydata4,id="月")
mydata4 = na.omit(mydata4)
res5 = dbSendQuery(con1,"select date_format(成交时间,'%Y-%m') as 月,
count(成交时间) as 网签
from 北京网签
group by 月
order by 月;")
mydata5 = dbFetch(res5,n=-1)
dbClearResult(res5)# 清除查询
mydata5$月 = as.Date(paste(mydata5$月,1,sep="-"),"%Y-%m-%d")
mydata5 = melt(mydata5,id="月")
mydata5 = na.omit(mydata5)
mydata6 =rbind(mydata4,mydata5)
ggplot(mydata6,aes(月,value,color=variable)) +
geom_line() + labs(title="链家成交与北京网签",x="月",y="值") +
theme(text = element_text(family = "STHeiti"))
res3 = dbSendQuery(con1,"select date_format(日期,'%Y-%m') as 月,
sum(住宅签约套数) as 住宅签约套数,
sum(住宅签约面积) as 住宅签约面积
from 北京建委爬数
group by 月
order by 月;")
mydata3 = dbFetch(res3,n=-1)
dbClearResult(res3)# 清除查询
mydata3$月 = as.Date(paste(mydata3$月,1,sep="-"),"%Y-%m-%d")
mydata3
mydata3 = melt(mydata3,id='月')
mydata3
mydata3 = na.omit(mydata3)
mydata6 =rbind(mydata4,mydata5,mydata3)
ggplot(mydata6,aes(月,value,color=variable)) +
geom_line() + labs(title="链家成交与北京网签",x="月",y="值") +
theme(text = element_text(family = "STHeiti"))
mydata3
mydata3 = subset(mydata3,variable = '住宅签约套数')
mydata3 = na.omit(mydata3)
mydata6 =rbind(mydata4,mydata5,mydata3)
ggplot(mydata6,aes(月,value,color=variable)) +
geom_line() + labs(title="链家成交与北京网签",x="月",y="值") +
theme(text = element_text(family = "STHeiti"))
mydata3
mydata3 = subset(mydata3,variable == '住宅签约套数')
mydata3 = na.omit(mydata3)
mydata6 =rbind(mydata4,mydata5,mydata3)
ggplot(mydata6,aes(月,value,color=variable)) +
geom_line() + labs(title="链家成交与北京网签",x="月",y="值") +
theme(text = element_text(family = "STHeiti"))
mydata6 =rbind(mydata4,mydata3)
ggplot(mydata6,aes(月,value,color=variable)) +
geom_line() + labs(title="链家成交与北京网签",x="月",y="值") +
theme(text = element_text(family = "STHeiti"))
library(RMySQL)
library(reshape2)
library(ggplot2)
library(plyr)
# 设置二手房连接
con1 = dbConnect(RMySQL::MySQL(),
dbname = 'se_secondhand_house',
username = 'lixinyao',
password = 'lixin131820',
host = '127.0.0.1')# 设置连接
res1 = dbSendQuery(con1,"select distinct 客_客户状态 from SE成交;")
mydata1 = dbFetch(res1,n=-1)
dbClearResult(res1)# 清除查询
mydata1
library(RMySQL)
library(reshape2)
library(ggplot2)
library(plyr)
# 设置二手房连接
con1 = dbConnect(RMySQL::MySQL(),
dbname = 'se_secondhand_house',
username = 'lixinyao',
password = 'lixin131820',
host = '127.0.0.1')# 设置连接
# 新增房源
res1 = dbSendQuery(con1,"select * from SE房源;")
mydata1 = dbFetch(res1,n=-1)
dbClearResult(res1)
head(mydata1)
res1 = dbSendQuery(con1,"select * from SE房源
where 委托类型 = '出售' and 城市 = '北京' and 录入时间2 != '';")
mydata1 = dbFetch(res1,n=-1)
dbClearResult(res1)
head(mydata1)
mydata1$录入时间2 = as.Date(mydata1$录入时间2,'%Y')
ggplot(mydata1,aes(建筑面积,color=录入时间2)) + geom_density()
mydata1$录入时间2 = as.factor(as.Date(mydata1$录入时间2,'%Y'))
ggplot(mydata1,aes(建筑面积,color=录入时间2)) + geom_density()
strptime("2016-01-01","%Y-%m-%d")
strptime("2016-01-01","%Y")
format("2011-01-01","%Y")
format(as.Date("2011-01-01"),"%Y")
res1 = dbSendQuery(con1,"select * from SE房源
where 委托类型 = '出售' and 城市 = '北京' and 录入时间2 != '';")
mydata1 = dbFetch(res1,n=-1)
dbClearResult(res1)
head(mydata1)
str(mydata1$录入时间2)
mydata1$录入时间2 = format(as.Date(mydata1$录入时间2),"%Y"))
mydata1$录入时间2 = format(as.Date(mydata1$录入时间2),"%Y")
ggplot(mydata1,aes(建筑面积,color=录入时间2)) + geom_density()
head(mydata1)
ggplot(mydata1,aes(建筑面积,color=录入时间2)) + geom_density() +
xlim(0,1000)
ggplot(mydata1,aes(建筑面积,color=录入时间2)) + geom_density() +
xlim(0,375)
ggplot(mydata1,aes(建筑面积,color=录入时间2)) + geom_density(size=1) +
xlim(0,375)
ggplot(mydata1,aes(建筑面积,color=录入时间2)) + geom_density() +
xlim(0,375)
# Server
library(shiny)
library(shinydashboard)
library(RMySQL)
library(ggplot2)
# 读入数据
con1 = dbConnect(RMySQL::MySQL(),
dbname = 'se_secondhand_house',
username = 'lixinyao',
password = 'lixin131820',
host = '127.0.0.1')# 设置连接
res1 = dbSendQuery(con1,"select 城市,录入时间2 as 录入日期,委托类型,
count(房源编号) as 委托量,
avg(总价) as 平均委托价格,avg(建筑面积) as 平均建筑面积
from SE房源
group by 城市,录入日期,委托类型
order by 城市,录入日期;")# 查询
mydata1 = dbFetch(res1,n=-1)
server = function(input,output){
output$table1 = DT::renderDataTable(DT::datatable({
data1 = mydata1
data1 = subset(data1,data1$城市==input$select1)
data1 = subset(data1,data1$录入日期 >= input$dates1[1] &
data1$录入日期 < input$dates1[2])
data1 = subset(data1,data1$委托类型==input$select2)
data1 = subset(data1,select=input$indicators1)
}))
output$plot1 = renderPlot({
data1 = mydata1
data1 = subset(data1,data1$城市==input$select1)
data1 = subset(data1,data1$录入日期 >= input$dates1[1] &
data1$录入日期 < input$dates1[2])
data1 = subset(data1,data1$委托类型==input$select2)
data1 = subset(data1,select=input$indicators1)
ggplot(data = data1,aes(录入日期,委托量,group=1)) +
geom_line(color="#00AE66") +
labs(title="SE委托量",x="日期",y="量") +
theme(text = element_text(family = "STHeiti"))
})
}
library(shiny)
library(shinydashboard)
library(DT)
setwd("/Users/lixinyao/myprogram/shiny/lianjia_research")
# 标题
header = dashboardHeader(
title = "链家研究院数据平台"
#  dropdownMenu(type = "messages",
#               messageItem(
#                 from = "Sales Dept",
#                 message = "Sales are steady this month"
#               ),
#               messageItem(
#                 from = "New User",
#                 message = "How do I register?",
#                 icon = icon("question"),
#                 time = "13:45"
#               ),
#               messageItem(
#                 from = "Support",
#                 message = "The new server is ready.",
#                 icon = icon("life-ring"),
#                 time = "2014-12-01"
#               )
#  )
)
# 侧边栏
sidebar = dashboardSidebar(
sidebarMenu(id = "tabs",
sidebarSearchForm(textId = "searchText",buttonId = "searchButton",
label = "Search..."),
menuItem("宏观经济数据",tabName = "dashboard",icon = icon("dashboard"),
menuSubItem("整体宏观经济",tabName = "macro_1",icon = icon("angle-double-right")),
menuSubItem("北京",tabName = "macro_2",icon = icon("angle-double-right"))
),
menuItem("链家房地产数据",tabName = "lianjia_data",icon = icon("dashboard"),
menuSubItem("SE房源",tabName = "se_secondhand_house",icon = icon("angle-double-right")),
menuSubItem("新房",tabName = "new_house",icon = icon("angle-double-right"))
),
menuItem("关于我们",tabName = "widgets",icon = icon("question"))
)
)
# 主体
body = dashboardBody(
tabItems(
tabItem(
tabName = "se_secondhand_house",
fluidRow(
column(width = 12,
tabBox(width = 3,
tabPanel(h5("筛选条件"),
selectInput("select1",label = h5("选择城市"),
choices = unique(mydata1$城市), selected = "北京"),
dateRangeInput("dates1",label = h5("选择日期"),language = "zh-CN"),
selectInput("select2",label = h5("委托类型"),
choices = unique(mydata1$委托类型), selected = "出售"),
checkboxGroupInput("indicators1",label = h5("选择指标"),
choices = names(mydata1),
selected = c("城市","录入日期","委托类型","委托量")),
submitButton("确定")),
tabPanel(h5("下载"),
radioButtons("format","文档格式",c("Excel","PDF","HTML","Word"),
inline = TRUE),
downloadButton("downloadReport")
)
),
tabBox(width = 9,
tabPanel(h5("报表"),
DT::dataTableOutput('table1')),
tabPanel(h5("图形"),
plotOutput('plot1')),
tabPanel(h5("数据挖掘"))
))
)
)
))
# UI
ui = dashboardPage(header,sidebar,body)
shinyApp(ui,server)
