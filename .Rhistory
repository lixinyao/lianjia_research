res2 = dbSendQuery(con1,"select date_format(录入时间,'%Y-%m') as 月,
count(客源编号) as 客源委托量
from SE客源
where 委托类型 = '出售' and 客源所在城市 = '北京'
group by 月
order by 月;")
res2 = dbSendQuery(con1,"select date_format(录入时间,'%Y-%m') as 月,
count(客源编号) as 客源委托量
from SE客源
where 委托类型 = '求购' and 客户所在城市 = '北京'
group by 月
order by 月;")
mydata2 = dbFetch(res2,n=-1)
dbClearResult(res2)# 清除查询
mydata2$月 = as.Date(paste(mydata2$月,1,sep="-"),"%Y-%m-%d")
ggplot(mydata2,aes(月,客源委托量)) +
geom_line(color = "#00AE66") +
xlab("时间") + ylab("客源委托量") +
theme(text = element_text(family = "STHeiti"))
ggplot(mydata2,aes(月,客源委托量)) +
geom_line(color = "#00AE66",size=1) +
xlab("时间") + ylab("客源委托量") +
theme(text = element_text(family = "STHeiti"))
ggplot(mydata1,aes(月,房源委托量)) +
geom_line(color = "#00AE66",size=1) +
xlab("时间") + ylab("房源委托量") +
theme(text = element_text(family = "STHeiti"))
mydata1
ggplot(mydata1,aes(月,房源委托量)) +
geom_line(color = "#00AE66",size=1) +
xlab("时间") + ylab("房源委托量") +
theme(text = element_text(family = "STHeiti"))
mydata1
ggplot(mydata2,aes(月,客源委托量)) +
geom_line(color = "#00AE66",size=1) +
xlab("时间") + ylab("客源委托量") +
theme(text = element_text(family = "STHeiti"))
ggplot(mydata2,aes(月,客源委托量)) +
geom_line(color = "#00AE66",size=1) +
labs(x="\n时间",y="客源委托量",title="客源委托量趋势") +
theme(text = element_text(family = "STHeiti"))
ggplot(mydata2,aes(月,客源委托量)) +
geom_line(color = "#00AE66",size=1) +
labs(x="\n时间",y="客源委托量",title="客源委托量趋势\n") +
theme(text = element_text(family = "STHeiti"))
ggplot(mydata2,aes(月,客源委托量)) +
geom_line(color = "#00AE66",size=1) +
labs(x="\n时间",y="客源委托量",title="客源委托量趋势\n") +
theme(text = element_text(family = "STHeiti")) + theme_bw()
ggplot(mydata2,aes(月,客源委托量)) +
ggplot(mydata2,aes(月,客源委托量)) +
ggplot(mydata2,aes(月,客源委托量)) +
geom_line(color = "#00AE66",size=1) +
labs(x="\n时间",y="客源委托量",title="客源委托量趋势\n") +
theme(text = element_text(family = "STHeiti"))
ggplot(mydata2,aes(月,客源委托量)) +
geom_line(color = "#00AE66",size=1) +
labs(x="\n时间",y="客源委托量",title="客源委托量趋势\n") +
theme(text = element_text(family = "STHeiti"))
dbClearResult(res2)# 清除查询
mydata2
mydata2_series = ts(mydata2,frequency = 12,start = c(2011,6))
mydata2_series
mydata2_series = ts(mydata2$客源委托量,frequency = 12,start = c(2011,6))
mydata2_series
ggplot(mydata2,aes(月,log(客源委托量))) +
geom_line(color = "#00AE66",size=1) +
labs(x="\n时间",y="客源委托量",title="客源委托量趋势\n") +
theme(text = element_text(family = "STHeiti"))
ggplot(mydata2,aes(月,客源委托量)) +
geom_line(color = "#00AE66",size=1) +
labs(x="\n时间",y="客源委托量",title="客源委托量趋势\n") +
theme(text = element_text(family = "STHeiti"))
mydata2_decompose = decompose(mydata2_series)
mydata2_decompose
plot(mydata2_decompose)
mydata2_decompose = data.frame(mydata2$月,
mydata2_decompose$trend,
mydata2_decompose$seasonal,
mydata2_decompose$random)
mydata2_decompose
names(mydata2_decompose) = c("time","trend","seasonal","random")
mydata2_decompose
library(reshape2)
mydata2_decompose = melt(mydata2_decompose,id="time")
head(mydata2_decompose)
ggplot(mydata2_decompose,aes(time,value,group=variable)) + geom_line() +
ylab("") + xlab("") +
facet_grid(variable ~ . , scales = "free")
ggplot(mydata2_decompose,aes(time,value,group=variable)) +
geom_line(color="#00AE66") +
ylab("") + xlab("") +
facet_grid(variable ~ . , scales = "free")
ggplot(mydata2_decompose,aes(time,value,group=variable)) +
geom_line(color="#00AE66",size=1) +
ylab("") + xlab("") +
facet_grid(variable ~ . , scales = "free")
ggplot(mydata2_decompose,aes(time,value,group=variable)) +
geom_line(color="#00AE66",size=0.5) +
ylab("") + xlab("") +
facet_grid(variable ~ . , scales = "free")
ggplot(mydata2_decompose,aes(time,value,color=variable,group=variable)) +
geom_line(color="#00AE66",size=0.5) +
ylab("") + xlab("") +
facet_grid(variable ~ . , scales = "free")
ggplot(mydata2_decompose,aes(time,value,color=variable,group=variable)) +
geom_line() +
ylab("") + xlab("") +
facet_grid(variable ~ . , scales = "free")
ggplot(mydata2_decompose,aes(time,value,color=variable,group=variable)) +
geom_line() +
theme(legend.position = "none")
facet_grid(variable ~ . , scales = "free")
ggplot(mydata2_decompose,aes(time,value,color=variable,group=variable)) +
geom_line() +
theme(legend.position = "none") +
facet_grid(variable ~ . , scales = "free")
ggplot(mydata2_decompose,aes(time,value,color=variable,group=variable)) +
geom_line() +
labs(title="客源委托量季节分解") +
theme(legend.position = "none") +
facet_grid(variable ~ . , scales = "free")
ggplot(mydata2_decompose,aes(time,value,color=variable,group=variable)) +
geom_line() +
labs(title="客源委托量季节分解") +
theme(legend.position = "none",text = element_text(family = "STHeiti")) +
facet_grid(variable ~ . , scales = "free")
ggplot(mydata2_decompose,aes(time,value,color=variable,group=variable)) +
geom_line() +
labs(title="客源委托量季节分解\n") +
theme(legend.position = "none",text = element_text(family = "STHeiti")) +
facet_grid(variable ~ . , scales = "free")
con1 = dbConnect(RMySQL::MySQL(),
dbname = 'se_secondhand_house',
username = 'lixinyao',
password = 'lixin131820',
host = '127.0.0.1')# 设置连接
# 二手房房源委托量
res1 = dbSendQuery(con1,"select date_format(录入时间,'%Y-%m') as 月,
count(房源编号) as 房源委托量
from SE房源
where 委托类型 = '出售' and 城市 = '北京'
group by 月
order by 月;")
mydata1 = dbFetch(res1,n=-1)
dbClearResult(res1)# 清除查询
mydata1
library(RMySQL)
library(reshape2)
library(ggplot2)
# 设置二手房连接
con1 = dbConnect(RMySQL::MySQL(),
dbname = 'se_secondhand_house',
username = 'lixinyao',
password = 'lixin131820',
host = '127.0.0.1')# 设置连接
# 二手房房源委托量
res1 = dbSendQuery(con1,"select date_format(录入时间,'%Y-%m') as 月,
count(房源编号) as 房源委托量
from SE房源
where 委托类型 = '出售' and 城市 = '北京'
group by 月
order by 月;")
mydata1 = dbFetch(res1,n=-1)
dbClearResult(res1)# 清除查询
mydata1$月 = as.Date(paste(mydata1$月,1,sep="-"),"%Y-%m-%d")
mydata1_series = ts(mydata1$房源委托量,frequency = 12,start = c(2011,1))
## 房源时间序列
ggplot(mydata1,aes(月,房源委托量)) +
geom_line(color = "#00AE66",size=1) +
labs(x="\n时间",y="房源委托量",title="房源委托量趋势") +
theme(text = element_text(family = "STHeiti"))
mydata1_decompose = decompose(mydata1_series)
mydata1_decompose = data.frame(mydata1$月,
mydata1_decompose$trend,
mydata1_decompose$seasonal,
mydata1_decompose$random)
names(mydata1_decompose) = c("time","trend","seasonal","random")
mydata1_decompose = melt(mydata1_decompose,id="time")
head(mydata1_decompose)
ggplot(mydata1_decompose,aes(time,value,color=variable,group=variable)) +
geom_line() +
labs(title="房源委托量季节分解") +
theme(legend.position = "none",text = element_text(family = "STHeiti")) +
facet_grid(variable ~ . , scales = "free")
ggplot(mydata2_decompose,aes(time,value,color=variable,group=variable)) +
geom_line() +
labs(title="客源委托量季节分解") +
theme(legend.position = "none",text = element_text(family = "STHeiti")) +
facet_grid(variable ~ . , scales = "free")
ggplot(mydata1_decompose,aes(time,value,color=variable,group=variable)) +
geom_line() +
labs(title="房源委托量季节分解") +
theme(legend.position = "none",text = element_text(family = "STHeiti")) +
facet_grid(variable ~ . , scales = "free")
ggplot(mydata1,aes(月,房源委托量)) +
geom_line(color = "#00AE66",size=1) +
labs(x="\n时间",y="房源委托量",title="房源委托量趋势") +
theme(text = element_text(family = "STHeiti"))
ggplot(mydata2,aes(月,客源委托量)) +
geom_line(color = "#00AE66",size=1) +
labs(x="\n时间",y="客源委托量",title="客源委托量趋势") +
theme(text = element_text(family = "STHeiti"))
ggplot(mydata2_decompose,aes(time,value,color=variable,group=variable)) +
geom_line() +
labs(title="客源委托量季节分解") +
theme(legend.position = "none",text = element_text(family = "STHeiti")) +
facet_grid(variable ~ . , scales = "free")
ggplot(mydata2,aes(月,客源委托量)) +
geom_line(color = "#00AE66",size=1) +
labs(x="\n时间",y="客源委托量",title="客源委托量趋势") +
theme(text = element_text(family = "STHeiti"))
ggplot(mydata2,aes(月,客源委托量)) +
geom_line(color = "#00AE66",size=1) +
labs(x="时间",y="客源委托量",title="客源委托量趋势") +
theme(text = element_text(family = "STHeiti"))
ggplot(mydata1,aes(月,房源委托量)) +
geom_line(color = "#00AE66",size=1) +
labs(x="时间",y="房源委托量",title="房源委托量趋势") +
theme(text = element_text(family = "STHeiti"))
ggplot(mydata1_decompose,aes(time,value,color=variable,group=variable)) +
geom_line() +
labs(title="房源委托量季节分解") +
theme(legend.position = "none",text = element_text(family = "STHeiti")) +
facet_grid(variable ~ . , scales = "free")
library(RMySQL)
library(reshape2)
library(ggplot2)
# 设置二手房连接
con1 = dbConnect(RMySQL::MySQL(),
dbname = 'se_secondhand_house',
username = 'lixinyao',
password = 'lixin131820',
host = '127.0.0.1')# 设置连接
res3 = dbSendQuery(con1,"select date_format(成交时间,'%Y-%m') as 月,
count(成交时间) as 网签量
from 北京网签
group by 月
order by 月;")
mydata3 = dbFetch(res3,n=-1)
dbClearResult(res3)# 清除查询
mydata3$月 = as.Date(paste(mydata3$月,1,sep="-"),"%Y-%m-%d")
mydata3_series = ts(mydata3$网签量,frequency = 12,start = c(2009,1))
## 网签时间序列
ggplot(mydata3,aes(月,网签量)) +
geom_line(color = "#00AE66",size=1) +
labs(x="时间",y="网签量",title="网签量趋势") +
theme(text = element_text(family = "STHeiti"))
## 网签季节分解
mydata3_decompose = decompose(mydata3_series)
mydata3_decompose = data.frame(mydata3$月,
mydata3_decompose$trend,
mydata3_decompose$seasonal,
mydata3_decompose$random)
names(mydata3_decompose) = c("time","trend","seasonal","random")
mydata3_decompose = melt(mydata3_decompose,id="time")
head(mydata3_decompose)
ggplot(mydata3_decompose,aes(time,value,color=variable,group=variable)) +
geom_line() +
labs(title="网签季节分解") +
theme(legend.position = "none",text = element_text(family = "STHeiti")) +
facet_grid(variable ~ . , scales = "free")
install.packages("x12")
library(shiny)
library(shinydashboard)
library(DT)
setwd("/Users/lixinyao/myprogram/shiny/lianjia_research")
# 标题
header = dashboardHeader(
title = "链家研究院数据平台"
#  dropdownMenu(type = "messages",
#               messageItem(
#                 from = "Sales Dept",
#                 message = "Sales are steady this month"
#               ),
#               messageItem(
#                 from = "New User",
#                 message = "How do I register?",
#                 icon = icon("question"),
#                 time = "13:45"
#               ),
#               messageItem(
#                 from = "Support",
#                 message = "The new server is ready.",
#                 icon = icon("life-ring"),
#                 time = "2014-12-01"
#               )
#  )
)
# 侧边栏
sidebar = dashboardSidebar(
sidebarMenu(id = "tabs",
sidebarSearchForm(textId = "searchText",buttonId = "searchButton",
label = "Search..."),
menuItem("宏观经济数据",tabName = "dashboard",icon = icon("dashboard"),
menuSubItem("整体宏观经济",tabName = "macro_1",icon = icon("angle-double-right")),
menuSubItem("北京",tabName = "macro_2",icon = icon("angle-double-right"))
),
menuItem("链家房地产数据",tabName = "lianjia_data",icon = icon("dashboard"),
menuSubItem("SE二手房",tabName = "se_secondhand_house",icon = icon("angle-double-right")),
menuSubItem("新房",tabName = "new_house",icon = icon("angle-double-right"))
),
menuItem("关于我们",tabName = "widgets",icon = icon("question"))
)
)
# 主体
body = dashboardBody(
tabItems(
tabItem(
tabName = "se_secondhand_house",
fluidRow(
column(width = 12,
tabBox(width = NULL,
tabPanel(h5("筛选条件"),
dateRangeInput("dates",label = h6("选择日期"),language = "zh-CN"),
checkboxGroupInput("indicators",label = h6("选择指标"),
choices = names(mydata),
selected="房源编号")),
tabPanel(h5("下载"),
radioButtons("format","文档格式",c("Excel","PDF","HTML","Word"),
inline = TRUE),
downloadButton("downloadReport")
),
tabPanel(h5("数据"),
DT::dataTableOutput('table'))
)))
)
)
)
# UI
ui = dashboardPage(header,sidebar,body)
shinyApp(ui,server)
# Server
library(shiny)
library(shinydashboard)
library(RMySQL)
library(ggplot2)
# 读入数据
# wind宏观经济
con1 = dbConnect(RMySQL::MySQL(),
dbname = 'se_secondhand_house',
username = 'lixinyao',
password = 'lixin131820',
host = '127.0.0.1')# 设置连接
res1 = dbSendQuery(con1,"select * from SE房源;")# 查询
mydata = dbFetch(res1,n=-1)# 读入数据框
server = function(input,output){
output$table = DT::renderDataTable(DT::datatable({
data = mydata
data = subset(data,select=input$indicators)
data = subset(data,data$录入时间==input$dates)
}))
}
library(shiny)
library(shinydashboard)
library(DT)
setwd("/Users/lixinyao/myprogram/shiny/lianjia_research")
# 标题
header = dashboardHeader(
title = "链家研究院数据平台"
#  dropdownMenu(type = "messages",
#               messageItem(
#                 from = "Sales Dept",
#                 message = "Sales are steady this month"
#               ),
#               messageItem(
#                 from = "New User",
#                 message = "How do I register?",
#                 icon = icon("question"),
#                 time = "13:45"
#               ),
#               messageItem(
#                 from = "Support",
#                 message = "The new server is ready.",
#                 icon = icon("life-ring"),
#                 time = "2014-12-01"
#               )
#  )
)
# 侧边栏
sidebar = dashboardSidebar(
sidebarMenu(id = "tabs",
sidebarSearchForm(textId = "searchText",buttonId = "searchButton",
label = "Search..."),
menuItem("宏观经济数据",tabName = "dashboard",icon = icon("dashboard"),
menuSubItem("整体宏观经济",tabName = "macro_1",icon = icon("angle-double-right")),
menuSubItem("北京",tabName = "macro_2",icon = icon("angle-double-right"))
),
menuItem("链家房地产数据",tabName = "lianjia_data",icon = icon("dashboard"),
menuSubItem("SE二手房",tabName = "se_secondhand_house",icon = icon("angle-double-right")),
menuSubItem("新房",tabName = "new_house",icon = icon("angle-double-right"))
),
menuItem("关于我们",tabName = "widgets",icon = icon("question"))
)
)
# 主体
body = dashboardBody(
tabItems(
tabItem(
tabName = "se_secondhand_house",
fluidRow(
column(width = 12,
tabBox(width = NULL,
tabPanel(h5("筛选条件"),
dateRangeInput("dates",label = h6("选择日期"),language = "zh-CN"),
checkboxGroupInput("indicators",label = h6("选择指标"),
choices = names(mydata),
selected="房源编号")),
tabPanel(h5("下载"),
radioButtons("format","文档格式",c("Excel","PDF","HTML","Word"),
inline = TRUE),
downloadButton("downloadReport")
),
tabPanel(h5("数据"),
DT::dataTableOutput('table'))
)))
)
)
)
# UI
ui = dashboardPage(header,sidebar,body)
shinyApp(ui,server)
# Server
library(shiny)
library(shinydashboard)
library(RMySQL)
library(ggplot2)
# 读入数据
# wind宏观经济
con1 = dbConnect(RMySQL::MySQL(),
dbname = 'se_secondhand_house',
username = 'lixinyao',
password = 'lixin131820',
host = '127.0.0.1')# 设置连接
res1 = dbSendQuery(con1,"select * from SE房源;")# 查询
mydata = dbFetch(res1,n=-1)# 读入数据框
server = function(input,output){
output$table = DT::renderDataTable(DT::datatable({
data = mydata
data = subset(data,select=input$indicators)
data = subset(data,data$录入时间==input$dates)
}))
}
library(shiny)
library(shinydashboard)
library(DT)
setwd("/Users/lixinyao/myprogram/shiny/lianjia_research")
# 标题
header = dashboardHeader(
title = "链家研究院数据平台"
#  dropdownMenu(type = "messages",
#               messageItem(
#                 from = "Sales Dept",
#                 message = "Sales are steady this month"
#               ),
#               messageItem(
#                 from = "New User",
#                 message = "How do I register?",
#                 icon = icon("question"),
#                 time = "13:45"
#               ),
#               messageItem(
#                 from = "Support",
#                 message = "The new server is ready.",
#                 icon = icon("life-ring"),
#                 time = "2014-12-01"
#               )
#  )
)
# 侧边栏
sidebar = dashboardSidebar(
sidebarMenu(id = "tabs",
sidebarSearchForm(textId = "searchText",buttonId = "searchButton",
label = "Search..."),
menuItem("宏观经济数据",tabName = "dashboard",icon = icon("dashboard"),
menuSubItem("整体宏观经济",tabName = "macro_1",icon = icon("angle-double-right")),
menuSubItem("北京",tabName = "macro_2",icon = icon("angle-double-right"))
),
menuItem("链家房地产数据",tabName = "lianjia_data",icon = icon("dashboard"),
menuSubItem("SE二手房",tabName = "se_secondhand_house",icon = icon("angle-double-right")),
menuSubItem("新房",tabName = "new_house",icon = icon("angle-double-right"))
),
menuItem("关于我们",tabName = "widgets",icon = icon("question"))
)
)
# 主体
body = dashboardBody(
tabItems(
tabItem(
tabName = "se_secondhand_house",
fluidRow(
column(width = 12,
tabBox(width = NULL,
tabPanel(h5("筛选条件"),
dateRangeInput("dates",label = h6("选择日期"),language = "zh-CN"),
checkboxGroupInput("indicators",label = h6("选择指标"),
choices = names(mydata),
selected="房源编号")),
tabPanel(h5("下载"),
radioButtons("format","文档格式",c("Excel","PDF","HTML","Word"),
inline = TRUE),
downloadButton("downloadReport")
),
tabPanel(h5("数据"),
DT::dataTableOutput('table'))
)))
)
)
)
# UI
ui = dashboardPage(header,sidebar,body)
shinyApp(ui,server)
